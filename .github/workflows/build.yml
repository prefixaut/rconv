---
name: 'Build the application'

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      matrix:
        nim: [ '1.6.0', 'stable', 'devel' ]
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]

    name: Build on ${{ matrix.os }} with nim ${{ matrix.nim }}
    runs-on: ${{ matrix.os }}
    # permissions:
    #  contents: write

    steps:
    # Basic Setup
    - uses: actions/checkout@v2
    - name: Setup Nim Environment ${{ matrix.nim }}
      uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: ${{ matrix.nim }}
    - name: Cache nimble
      id: cache-nimble
      uses: actions/cache@v1
      with:
        path: ~/.nimble
        key: ${{ runner.os }}-nimble-${{ matrix.nim }}-${{ hashFiles('*.nimble') }}
      if: runner.os != 'Windows'

    # Building & Testing
    - name: Install dependencies
      run: nimble install -Y
    - name: Build CLI
      run: nim cli
    - name: Build library
      run: nim lib
    
    # Update documentation
    - name: Build documentation
      run: nim docs
      if: ${{ github.ref == 'refs/heads/master' }}
    - name: Deploy to GitHub-Pages
      uses: JamesIves/github-pages-deploy-action@v4.2.3
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        branch: gh-pages
        folder: docs

    # Releases
    - name: Create CLI Release Build
      if: ${{ matrix.nim == '1.6.0' && startsWith(github.ref, 'refs/tags/') }}
      run: nim cli -d:release
    - name: Create Library Release Build
      if: ${{ matrix.nim == '1.6.0' && startsWith(github.ref, 'refs/tags/') }}
      run: nim build -d:release
    - name: Release
      uses: ncipollo/release-action@v1
      if: ${{ matrix.nim == '1.6.0' && startsWith(github.ref, 'refs/tags/') }}
      with:
        artifacts: "dist/*"
        allowUpdates: true
        prerelease: ${{ endsWith(github.ref, 'rc') || endsWith(github.ref, 'snapshot') }}
        token: ${{ secrets.GITHUB_TOKEN }}
