---
name: Building & Testing

on: ['push', 'pull_request']

jobs:
  build:
    name: Build on ${{ matrix.os }} with nim ${{ matrix.nim }}

    strategy:
      matrix:
        nim:
          - '1.6.x'
          #- 'stable'
          #- 'devel'
        os:
          - 'ubuntu-latest'
          #- 'windows-latest'
          #- 'macos-latest'

    runs-on: ${{ matrix.os }}

    steps:
      # Basic Setup
      - uses: actions/checkout@v2
      - name: Setup Nim Environment ${{ matrix.nim }}
        uses: jiro4989/setup-nim-action@v1
        with:
          nim-version: ${{ matrix.nim }}
      - name: Cache nimble
        id: cache-nimble
        uses: actions/cache@v1
        with:
          path: ~/.nimble
          key: ${{ runner.os }}-nimble-${{ matrix.nim }}-${{ hashFiles('*.nimble') }}
        if: runner.os != 'Windows'

      # Building
      - name: Install dependencies
        run: nimble install -Y

      - name: Build CLI
        run: nimble build

      - name: Build library
        run: nimble clib

      # Install perl on windows (linux and macos already have it installed)
      - uses: shogo82148/actions-setup-perl@v1
        if: runner.os == 'Windows'
        with:
          perl-version: '5.32'
          distribution: strawberry
      
      # Install lcov
      - name: Clone lcov
        if: runner.os != 'Linux'
        uses: actions/checkout@v2
        with:
          repository: 'linux-test-project/lcov'
          path: './clones/lcov'
      - name: Install lcov (Unix)
        if: runner.os == 'Linux'
        run: sudo apt-get install -y lcov
      - name: Install lcov (MacOS)
        if: runner.os == 'macOS'
        run: echo "todo"
      - name: Install lcov (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "perl .\clones\lcov\bin\lcov %*" > lcov
          echo "perl .\clones\lcov\bin\gendesc %*" > gendesc
          echo "perl .\clones\lcov\bin\genhtml %*" > genhtml
          echo "perl .\clones\lcov\bin\geninfo %*" > geninfo
          echo "perl .\clones\lcov\bin\genpng %*" > genpng
          echo "PATH=%PATH%;%cd%" >> $GITHUB_ENV

      # Testing & Converage
      - name: Run tests with converage
        run: coco --target "tests/**/*.nim" --cov '!tests,!nimcache' --compiler="--hints:off" --gen_html=false

      - name: 'Upload converage partial: ${{ runner.os }} - ${{ matrix.nim }}'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ runner.os }}-${{ matrix.nim }}
          parallel: true
          path-to-lcov: ./lcov.info

  upload-coverage:
    name: Upload converage

    runs-on: ubuntu-latest

    if: ${{ always() }}
    needs: [ 'build' ]

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true
