InvalidNoteError	rconv/step_mania.html#InvalidNoteError	step_mania: InvalidNoteError	
NoteType	rconv/step_mania.html#NoteType	step_mania: NoteType	
Note	rconv/step_mania.html#Note	step_mania: Note	
Beat	rconv/step_mania.html#Beat	step_mania: Beat	
NoteData	rconv/step_mania.html#NoteData	step_mania: NoteData	
ChartFile	rconv/step_mania.html#ChartFile	step_mania: ChartFile	
newTimedAttack	rconv/step_mania.html#newTimedAttack,float,float,seq[Modifier]	step_mania: newTimedAttack(time: float; length: float; mods: seq[Modifier] = @[]): TimedAttack	
newTimedAttack	rconv/step_mania.html#newTimedAttack,Option[float],Option[float],seq[Modifier]	step_mania: newTimedAttack(time: Option[float]; length: Option[float];\n               mods: seq[Modifier] = @[]): TimedAttack	
newNote	rconv/step_mania.html#newNote,NoteType,int,int,Attack,int	step_mania: newNote(kind: NoteType; snap: int; column: int; attack: Attack = nil;\n        keySound: int = -1): Note	
newBeat	rconv/step_mania.html#newBeat,int,int,seq[Note]	step_mania: newBeat(index: int; snapSize: int = 0; notes: seq[Note] = @[]): Beat	
newNoteData	rconv/step_mania.html#newNoteData,ChartType,string,Difficulty,int,seq[Beat]	step_mania: newNoteData(chartType: ChartType; description: string = &quot;&quot;;\n            difficulty: Difficulty = Difficulty.Beginner;\n            difficultyLevel: int = 1; beats: seq[Beat] = @[]): NoteData	
newChartFile	rconv/step_mania.html#newChartFile,string,string,string,string,string,string,string,string,string,string,string,string,string,seq[InstrumentTrack],float,float,string,bool,seq[BackgroundChange],seq[BackgroundChange],seq[BackgroundChange],seq[BackgroundChange],seq[BackgroundChange],seq[string],float,seq[Stop],seq[BpmChange],seq[TimeSignature],seq[TimedAttack],seq[Delay],seq[TickCount],seq[NoteData],seq[ComboChange],seq[SpeedChange],seq[ScollSpeedChange],seq[FakeSection],seq[Label]	step_mania: newChartFile(title: string = &quot;&quot;; subtitle: string = &quot;&quot;; arist: string = &quot;&quot;;\n             titleTransliterated: string = &quot;&quot;;\n             subtitleTransliterated: string = &quot;&quot;;\n             artistTransliterated: string = &quot;&quot;; genre: string = &quot;&quot;;\n             credit: string = &quot;&quot;; banner: string = &quot;&quot;; background: string = &quot;&quot;;\n             lyricsPath: string = &quot;&quot;; cdTitle: string = &quot;&quot;; music: string = &quot;&quot;;\n             instrumentTracks: seq[InstrumentTrack] = @[];\n             sampleStart: float = 0.0; sampleLength: float = 0.0;\n             displayBpm: string = &quot;&quot;; selectable: bool = true;\n             bgChanges: seq[BackgroundChange] = @[];\n             bgChanges2: seq[BackgroundChange] = @[];\n             bgChanges3: seq[BackgroundChange] = @[];\n             animations: seq[BackgroundChange] = @[];\n             fgChanges: seq[BackgroundChange] = @[];\n             keySounds: seq[string] = @[]; offset: float = 0.0;\n             stops: seq[Stop] = @[]; bpms: seq[BpmChange] = @[];\n             timeSignatures: seq[TimeSignature] = @[];\n             attacks: seq[TimedAttack] = @[]; delays: seq[Delay] = @[];\n             tickCounts: seq[TickCount] = @[]; noteData: seq[NoteData] = @[];\n             combos: seq[ComboChange] = @[]; speeds: seq[SpeedChange] = @[];\n             scrolls: seq[ScollSpeedChange] = @[];\n             fakes: seq[FakeSection] = @[]; labels: seq[Label] = @[]): ChartFile	
asFormattingParams	rconv/step_mania.html#asFormattingParams,ChartFile	step_mania: asFormattingParams(chart: ChartFile): FormattingParameters	
parseStepMania	rconv/step_mania.html#parseStepMania,string,bool	step_mania: parseStepMania(data: string; lenient: bool = false): ChartFile	
parseStepMania	rconv/step_mania.html#parseStepMania,Stream,bool	step_mania: parseStepMania(stream: Stream; lenient: bool = false): ChartFile	
write	rconv/step_mania.html#write,ChartFile	step_mania: write(chart: ChartFile): string	
write	rconv/step_mania.html#write,ChartFile,Stream	step_mania: write(chart: ChartFile; stream: Stream): void	
